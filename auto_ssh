#!/usr/bin/expect

#################
#	Auto-ssh pour les feignasses
#	1- cr√©er un fichier secrets avec les logins (login "espace" pwd), un par ligne
#	2- Crypter le fichier avec la commande gpg --encrypt --output secrets.gpg -r "user" secrets
#	3- Supprimer le fichier secrets en clair
################

#trap sigwinch and pass it to the child we spawned
trap {
 set rows [stty rows]
 set cols [stty columns]
 stty rows $rows columns $cols < $spawn_out(slave,name)
} WINCH

set timeout -1
set HomeDir $env(HOME)
set Secrets "$HomeDir/scripts/secrets.gpg"
set host [lindex $argv 0];

if {[regexp {(^[2][5][0-5].|^[2][0-4][0-9].|^[1][0-9][0-9].|^[0-9][0-9].|^[0-9].)([2][0-5][0-5].|[2][0-4][0-9].|[1][0-9][0-9].|[0-9][0-9].|[0-9].)([2][0-5][0-5].|[2][0-4][0-9].|[1][0-9][0-9].|[0-9][0-9].|[0-9].)([2][0-5][0-5]|[2][0-4][0-9]|[1][0-9][0-9]|[0-9][0-9]|[0-9])$} $host match p1 p2 p3 p4]} {
  set IP $p1$p2$p3$p4
} else {
	set IP [ exec host $host | grep -v arpa | awk "{print \$4}"  ]
}

send "$IP\n"
set PASS [ exec gpg -o - -d /home/paul/scripts/secrets.gpg 2> /dev/null | grep user | awk "{print \$2}" ]

spawn ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no -k user@$IP
expect {
	"(yes/no)" { 
		send "yes\n"
		expect "assword:" { send "$PASS\n" }
		}
	"assword:" { send "$PASS\n" }
}

interact
